import '../../enum/acceleration_unit.dart';
import '../../enum/area_unit.dart';
import '../../enum/blood_cholesterol_unit.dart';
import '../../enum/blood_glucose_unit.dart';
import '../../enum/capacitance_unit.dart';
import '../../enum/converter.dart';
import '../../enum/data_rate_unit.dart';
import '../../enum/data_unit.dart';
import '../../enum/density_unit.dart';
import '../../enum/dynamic_viscocity_unit.dart';
import '../../enum/electric_charge_unit.dart';
import '../../enum/electric_current_unit.dart';
import '../../enum/electric_potential_unit.dart';
import '../../enum/electrical_conductance_unit.dart';
import '../../enum/electrical_resistance_unit.dart';
import '../../enum/energy_unit.dart';
import '../../enum/force_unit.dart';
import '../../enum/frequency_unit.dart';
import '../../enum/illuminance_unit.dart';
import '../../enum/inductance_unit.dart';
import '../../enum/kinematic_viscocity_unit.dart';
import '../../enum/length_unit.dart';
import '../../enum/luminance_unit.dart';
import '../../enum/magnetic_field_intensity_unit.dart';
import '../../enum/magnetic_flux_density_unit.dart';
import '../../enum/magnetic_flux_unit.dart';
import '../../enum/mass_flow_unit.dart';
import '../../enum/mass_fraction_unit.dart';
import '../../enum/mass_moment_of_inertia_unit.dart';
import '../../enum/mass_per_area_unit.dart';
import '../../enum/mass_unit.dart';
import '../../enum/mole_fraction_unit.dart';
import '../../enum/plane_angle_unit.dart';
import '../../enum/power_unit.dart';
import '../../enum/pressure_unit.dart';
import '../../enum/radioactivity_unit.dart';
import '../../enum/sound_unit.dart';
import '../../enum/speed_unit.dart';
import '../../enum/temperature_unit.dart';
import '../../enum/time_unit.dart';
import '../../enum/torque_unit.dart';
import '../../enum/volume_flow_per_area_unit.dart';
import '../../enum/volume_flow_unit.dart';
import '../../enum/volume_per_area_unit.dart';
import '../../enum/volume_unit.dart';
import '../../enum/water_hardness_unit.dart';

/// The base unit of each `ConversionType`.
final Map<Converter, dynamic> baseUnit = {
  Converter.acceleration: AccelerationUnit.metrePerSecondSquared,
  Converter.area: AreaUnit.squareMetre,
  Converter.bloodCholesterol: BloodCholesterolUnit.milliGramPerDeciLitre,
  Converter.bloodGlucose: BloodGlucoseUnit.milliGramPerDeciLitre,
  Converter.capacitance: CapacitanceUnit.farad,
  Converter.data: DataUnit.bit,
  Converter.dataRate: DataRateUnit.bitPerSecond,
  Converter.density: DensityUnit.gramPerLitre,
  Converter.dynamicViscocity: DynamicViscocityUnit.pascalSecond,
  Converter.electricCharge: ElectricChargeUnit.coulomb,
  Converter.electricCurrent: ElectricCurrentUnit.ampere,
  Converter.electricPotential: ElectricPotentialUnit.volt,
  Converter.electricalConductance: ElectricalConductanceUnit.siemens,
  Converter.electricalResistance: ElectricalResistanceUnit.ohm,
  Converter.energy: EnergyUnit.joule,
  Converter.force: ForceUnit.newton,
  Converter.frequency: FrequencyUnit.hertz,
  Converter.illuminance: IlluminanceUnit.lux,
  Converter.inductance: InductanceUnit.henry,
  Converter.kinematicViscocity: KinematicViscocityUnit.squareMetrePerSecond,
  Converter.length: LengthUnit.metre,
  Converter.luminance: LuminanceUnit.candelaPerSquareMetre,
  Converter.magneticFieldIntensity: MagneticFieldIntensityUnit.amperePerMetre,
  Converter.magneticFlux: MagneticFluxUnit.weber,
  Converter.magneticFluxDensity: MagneticFluxDensityUnit.tesla,
  Converter.mass: MassUnit.kiloGram,
  Converter.massFlow: MassFlowUnit.kiloGramPerSecond,
  Converter.massFraction: MassFractionUnit.gramPerGram,
  Converter.massMomentOfInertia: MassMomentOfInertiaUnit.kiloGramSquareMetre,
  Converter.massPerArea: MassPerAreaUnit.kiloGramPerSquareMetre,
  Converter.moleFraction: MoleFractionUnit.molePerMole,
  Converter.planeAngle: PlaneAngleUnit.radian,
  Converter.power: PowerUnit.joulePerSecond,
  Converter.pressure: PressureUnit.pascal,
  Converter.radioactivity: RadioactivityUnit.becquerel,
  Converter.sound: SoundUnit.deciBel,
  Converter.speed: SpeedUnit.metrePerSecond,
  Converter.temperature: TemperatureUnit.kelvin,
  Converter.time: TimeUnit.second,
  Converter.torque: TorqueUnit.newtonMetre,
  Converter.volume: VolumeUnit.cubicMetre,
  Converter.volumeFlow: VolumeFlowUnit.cubicMetrePerSecond,
  Converter.volumeFlowPerArea:
      VolumeFlowPerAreaUnit.cubicMetrePerSecondPerSquareMetre,
  Converter.volumePerArea: VolumePerAreaUnit.cubicMetrePerSquareMetre,
  Converter.waterHardness: WaterHardnessUnit.milliMolePerLitre_CaCO3,
};
